class Node:
    def __init__(self, data):
        self.data = data
        self.next = None


class LinkedList:
    def __init__(self):
        self.head = None

    def append(self, data):
        # Create a new node
        new_node = Node(data)

        if self.head is None:
            # If the linked list is empty, make the new node as the head
            self.head = new_node
        else:
            # Traverse to the last node
            current = self.head
            while current.next is not None:
                current = current.next

            # Append the new node to the last node
            current.next = new_node

    def position(self, pos, data):
        # Create a new node
        new_node = Node(data)

        if pos == 0:
            # Insert at the beginning of the linked list
            new_node.next = self.head
            self.head = new_node
        else:
            previous = None
            current = self.head
            current_pos = 0
            while current_pos < pos and current is not None:
                # Traverse to the desired position
                previous = current
                current = current.next
                current_pos += 1

            # Insert the new node at the given position
            previous.next = new_node
            new_node.next = current

    def display(self):
        current = self.head
        while current:
            # Print the data of the current node
            print(current.data, end=" ")
            current = current.next


# Create a new linked list
ll = LinkedList()

# Take input from the user until -1 is entered
while True:
    value = int(input())
    if value == -1:
        break

    # Append the value to the linked list
    ll.append(value)

# Get the position and data for insertion
pos = int(input())
data = int(input())

print("Before Insertion:")
ll.display()

# Insert the data at the given position
ll.position(pos, data)

print("After Insertion:")
ll.display()
